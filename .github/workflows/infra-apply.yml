name: Terraform Apply

on:
  push:
    branches:
      - main
      - stg
      - prd
    paths:
      - 'terraform/**'
      - '.github/workflows/infra-apply.yml'
  workflow_dispatch:
    inputs:
      target_env:
        description: '手動実行で対象環境を指定する場合に利用します (dev/stg/prd)'
        required: false

jobs:
  terraform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env:
          - name: dev
            upper: DEV
          - name: stg
            upper: STG
          - name: prd
            upper: PRD
      fail-fast: false
    environment: ${{ matrix.env.name }}
    permissions:
      contents: read
      id-token: write
    env:
      TF_WORKDIR: terraform
      AWS_REGION: ${{ vars.AWS_REGION || 'ap-northeast-1' }}
      TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
      TF_STATE_KEY: ${{ vars.TF_STATE_KEY || 'infra/terraform.tfstate' }}
    steps:
      - name: Detect branch env
        id: detect_env
        env:
          REF_NAME: ${{ github.ref_name }}
        run: |
          case "${REF_NAME}" in
            main) echo "branch_env=dev" >> "$GITHUB_OUTPUT" ;;
            stg) echo "branch_env=stg" >> "$GITHUB_OUTPUT" ;;
            prd) echo "branch_env=prd" >> "$GITHUB_OUTPUT" ;;
            *)
              echo "branch_env=" >> "$GITHUB_OUTPUT"
              ;;
          esac

      - name: Filter target env
        id: filter
        env:
          TARGET_ENV: ${{ github.event.inputs.target_env || '' }}
          BRANCH_ENV: ${{ steps.detect_env.outputs.branch_env || '' }}
          MATRIX_ENV: ${{ matrix.env.name }}
          EVENT_NAME: ${{ github.event_name }}
          PR_MERGED: ${{ github.event.pull_request.merged || false }}
        run: |
          if [ "${EVENT_NAME}" = "pull_request" ] && [ "${PR_MERGED}" != "true" ]; then
            echo "run=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if [ -n "$TARGET_ENV" ]; then
            if [ "$TARGET_ENV" = "$MATRIX_ENV" ]; then
              echo "run=true" >> "$GITHUB_OUTPUT"
            else
              echo "run=false" >> "$GITHUB_OUTPUT"
            fi
          elif [ -n "$BRANCH_ENV" ]; then
            if [ "$BRANCH_ENV" = "$MATRIX_ENV" ]; then
              echo "run=true" >> "$GITHUB_OUTPUT"
            else
              echo "run=false" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "run=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Checkout
        if: steps.filter.outputs.run == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Terraform Apply Pipeline
        if: steps.filter.outputs.run == 'true'
        uses: ./.github/actions/terraform-apply
        with:
          tf_workdir: ${{ env.TF_WORKDIR }}
          aws_region: ${{ env.AWS_REGION }}
          tf_state_bucket: ${{ env.TF_STATE_BUCKET }}
          tf_state_key: ${{ env.TF_STATE_KEY }}
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
